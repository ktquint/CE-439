---
title: "Bias Correction"
author: "Kenny Quintana"
format: html
editor: visual
---

## Streamgage Data

```{r Import Libraries, include=FALSE}

library(tidyverse)
library(fuzzyjoin)
library(tibble)
library(knitr)

```

```{r Streamgage Data, echo=FALSE}
# load in in-situ data
usgs <- read.table("./yakima.txt", sep = "\t", header = FALSE) |> 
  select(V3,V4) |> 
  slice(3:n()) |> 
  rename(Date=V3, `Flow (cfs)`=V4) |>
  mutate(Date=as.Date(Date), Year = year(Date), Month = month(Date), Day = day(Date)) |> 
  mutate(`Flow (cms)` = as.numeric(`Flow (cfs)`) / 35.315) |>
  mutate(Month=factor(Month)) |> 
  drop_na()

monthly.usgs <- usgs |> # this data.frame will be iterated through with the geoglows data
  group_by(Month) |> 
  group_split()
  
```

```{r Simulation Data, echo=FALSE}
# load in GEOGLOWS retrospective data
monthly.geoglows <- read_csv('./retrospective_720237537.csv') |> 
  rename(`Flow (cms)`=`720237537`) |> 
  mutate(Date=as.Date(time)) |>
  separate(time, into=c("Year", "Month", "Day"), sep = "-") |>
  mutate(Month=as.numeric(Month)) |>
  mutate(Month=factor(Month)) |>
  drop_na() |> # there shouldn't be na, but you can't be too careful
  group_by(Month) |> 
  group_split()

```

```{r Bias Correction, echo=FALSE}

bias.correction <- data.frame()
usgs.fdc <- data.frame()
geoglows.fdc <- data.frame()

for (i in 1:(length(monthly.usgs))) {
  usgs.month <- monthly.usgs[[i]] |> 
    arrange(desc(`Flow (cms)`)) |> 
    mutate(rank = 1:n()) |> 
    mutate(EP = round(rank/n() * 100,2)) |> 
    rename(`Bias Corrected Flow (cms)`=`Flow (cms)`)
  usgs.fdc <- usgs.fdc |> 
    rbind(usgs.month |> 
    rename(`Flow (cms)`=`Bias Corrected Flow (cms)`)) |> 
    mutate(Date=as.Date(Date))
  
  geoglows.month <- monthly.geoglows[[i]] |> 
    arrange(desc(`Flow (cms)`)) |> 
    mutate(rank = 1:n()) |> 
    mutate(EP = round(rank/n() * 100,2))
  geoglows.fdc <- geoglows.fdc |> 
    rbind(geoglows.month) |> 
    mutate(Date=as.Date(Date))
  
  monthly.bias <- difference_left_join(geoglows.month, usgs.month, by='EP', max_dist=0.03)
  bias.correction <- bias.correction |> 
    rbind(monthly.bias)
}


bias.correction <- bias.correction |>
  select(`Date.x`, `Year.x`, `Month.x`, Day.x, `Flow (cms)`, `Bias Corrected Flow (cms)`, `EP.y`) |>
  rename(Date=Date.x, Year=Year.x, Month=Month.x, Day=Day.x, EP=EP.y) |>
  arrange(Date)

ggplot() +
  geom_line(data = bias.correction, aes(x = Date, y = `Flow (cms)`, color = "GEOGLOWS Flow (cms)")) +
  geom_line(data = bias.correction, aes(x = Date, y = `Bias Corrected Flow (cms)`, color = "Bias Corrected Flow (cms)")) +
  geom_line(data = usgs, aes(x = Date, y = `Flow (cms)`, color = "USGS Flow (cms)")) +
  coord_cartesian(ylim = c(0, 800)) + 
  scale_x_date(limits = as.Date(c("2000-01-01", "2003-12-31")),
               date_breaks = "1 years", date_labels = "%m-%Y") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Example Retrospective Data", color = "Source") +
  scale_color_manual(values = c("USGS Flow (cms)" = "blue", "GEOGLOWS Flow (cms)" = "red", "Bias Corrected Flow (cms)" = "green")) +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5))

ggplot() +
  geom_line(data = usgs.fdc, aes(x = EP, y = `Flow (cms)`, color = "USGS")) +
  geom_line(data = geoglows.fdc, aes(x = EP, y = `Flow (cms)`, color = "GEOGLOWS")) +
  facet_wrap(~ Month, scales = 'free_y') + # the y-axis on each plot changes with its data
  labs(x = "Exceedance Probability (%)", y = "Flow (cms)", title = "Monthly Flow Duration Curves", color = "Source") +
  scale_color_manual(values = c("USGS" = "blue", "GEOGLOWS" = "red")) +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5)) # centers title

```

```{r Adjust Forecast}
# make this a numeric so we can do a join
bias.correction$Month <- as.numeric(bias.correction$Month)

forecast <- read_csv('./forecast_720237537.csv') |>
  mutate(Year = year(datetime),
         Month = month(datetime),
         Day = day(datetime),
         Hour = hour(datetime)) |>
  rename(`Flow (cms)`=flow_median) |>
  difference_left_join(bias.correction, by=c('Month', 'Flow (cms)'), max_dist=0.43) |>
  select(Year.x, Month.x, Day.x, Hour,
         `Flow (cms).x`,
         `Bias Corrected Flow (cms)`) |>
  rename(Year=Year.x, Month=Month.x, Day=Day.x,
         `Flow (cms)`=`Flow (cms).x`) |> 
  distinct(Month, Day, Hour, .keep_all = TRUE) |> 
  mutate(datetime=ISOdatetime(Year, Month, Day, Hour, 0, 0))

# check that all the bias corrected flows have values
print(sum(is.na(forecast$`Bias Corrected Flow (cms)`)))

# plot bias-corrected forecast data vs. ECMWF GEOGLOWS data
ggplot(data=forecast) +
  geom_line(mapping=aes(x=datetime, y=`Bias Corrected Flow (cms)`, color='Bias Corrected')) +
  geom_line(mapping=aes(x=datetime, y=`Flow (cms)`, color = 'GEOGLOWS')) +
  labs(x = "Date", y = "Flow (cms)", title = "Bias-Corrected Forecast Data", color = "Source") +
  scale_color_manual(values = c("Bias Corrected" = "green", "GEOGLOWS" = "red")) +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5)) + # this centers the title
  ylim(0, NA) # this makes the y-axis sstart at 0

```



```{r Streamflow Statistics}
stats <- tibble(`Source`=c("USGS",
                           "GEOGLOWS",
                           "Bias Corrected"),
                `Mean Flow (cms)`=c(mean(usgs$`Flow (cms)`),
                                    mean(bias.correction$`Flow (cms)`),
                                    mean(bias.correction$`Bias Corrected Flow (cms)`)),
                `Median Flow (cms)`=c(median(usgs$`Flow (cms)`),
                                      median(bias.correction$`Flow (cms)`),
                                      median(bias.correction$`Bias Corrected Flow (cms)`)),
                `Standard Deviation`=c(sd(usgs$`Flow (cms)`),
                                      sd(bias.correction$`Flow (cms)`),
                                      sd(bias.correction$`Bias Corrected Flow (cms)`)))

stats <- stats |> 
  mutate(`Mean Flow (cms)`=round(`Mean Flow (cms)`),
         `Median Flow (cms)`=round(`Median Flow (cms)`),
         `Standard Deviation`=round(`Standard Deviation`))

kable(stats)

```
